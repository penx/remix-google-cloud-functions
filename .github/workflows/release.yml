name: 📝 Draft Release
on:
  workflow_dispatch:
    inputs:
      release_type:
        type: choice
        description: Release or prerelease
        required: true
        default: prerelease
        options:
          - prerelease
          - release

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      
    steps:
    - name: ⬇️ Checkout main
      uses: actions/checkout@v3
      with:
        ref: main
        fetch-depth: 0

    - name: ⎔ Get Node version
      id: node_version
      run: echo "NVMRC=$(cat .nvmrc)" >> $GITHUB_OUTPUT

    - name: ⎔ Setup Node
      uses: actions/setup-node@v3
      with:
        node-version: ${{ steps.node_version.outputs.NVMRC }}
        registry-url: 'https://registry.npmjs.org'

    - name: ⤴️ Apply Release Version
      if: inputs.release_type == 'release'
      run: yarn version apply --all

    - name: ⤴️ Apply Prerelease Version
      if: inputs.release_type == 'prerelease'
      run: yarn version apply --all --prerelease

    - name: 🕵️ Get Version Number
      working-directory: remix-google-cloud-functions
      id: version
      run: |
        echo "version=$(cat package.json | jq -r '.version')" >> $GITHUB_OUTPUT
        echo "branch=releases/v$(cat package.json | jq -r '.version')" >> $GITHUB_OUTPUT

    - name: 🗜️ Configure Git
      run: |
        git config --local user.email "github-actions@github.com"
        git config --local user.name "GitHub Actions"
      
    - name: 📂 Git Add
      id: add
      run: |
        git add -A
        if [ -z "$(git status --porcelain)" ]; then
          echo "No changes"
          exit 0
        fi
        echo "continue=true" >> $GITHUB_OUTPUT

    - name: 🔀 Create Branch
      if: steps.add.continue
      run: git checkout -b ${{ steps.version.outputs.branch }}

    - name: 💾 Commit Changes
      if: steps.add.continue
      run: git commit -m "Release ${{ steps.version.outputs.version }}"

    - name: ⬆️ Push Changes
      if: steps.add.continue
      run: git push --set-upstream origin ${{ steps.version.outputs.branch }}
        
    - name: 🙋 Open Pull Request
      if: steps.add.continue
      env:
        GH_TOKEN: ${{ secrets.RELEASE_PR_GITHUB_TOKEN }}
      run: |
        gh pr create -f -l release

    - name: 📝 Draft Prerelease
      if: steps.add.continue && inputs.release_type == 'prerelease'
      env:
        GH_TOKEN: ${{ github.token }}
      run: gh release create v${{ steps.version.outputs.version }} --generate-notes --draft --target ${{ steps.version.outputs.branch }} --prerelease

    - name: 📝 Draft Release
      if: steps.add.continue && inputs.release_type == 'release'
      env:
        GH_TOKEN: ${{ github.token }}
      run: gh release create v${{ steps.version.outputs.version }} --generate-notes --draft --target ${{ steps.version.outputs.branch }}
